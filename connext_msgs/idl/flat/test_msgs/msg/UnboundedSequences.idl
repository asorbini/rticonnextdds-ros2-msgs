// generated from rosidl_adapter/resource/msg.idl.em
// with input from test_msgs/msg/UnboundedSequences.msg
// generated code does not contain a copyright notice

#ifndef test_msgs_msg_BasicTypes_idl
#define test_msgs_msg_BasicTypes_idl
#include "flat/test_msgs/msg/BasicTypes.idl"
#endif  // test_msgs_msg_BasicTypes_idl
#ifndef test_msgs_msg_Constants_idl
#define test_msgs_msg_Constants_idl
#include "flat/test_msgs/msg/Constants.idl"
#endif  // test_msgs_msg_Constants_idl
#ifndef test_msgs_msg_Defaults_idl
#define test_msgs_msg_Defaults_idl
#include "flat/test_msgs/msg/Defaults.idl"
#endif  // test_msgs_msg_Defaults_idl

module flat {
module test_msgs {
  module msg {
    

    @final
    @language_binding(FLAT_DATA)
    struct UnboundedSequences {
      boolean bool_values[100];

      octet byte_values[100];

      uint8 char_values[100];

      float float32_values[100];

      double float64_values[100];

      int8 int8_values[100];

      uint8 uint8_values[100];

      int16 int16_values[100];

      uint16 uint16_values[100];

      int32 int32_values[100];

      uint32 uint32_values[100];

      int64 int64_values[100];

      uint64 uint64_values[100];

      char string_values[100][255 + 1];

      flat::test_msgs::msg::BasicTypes basic_types_values[100];

      flat::test_msgs::msg::Constants constants_values[100];

      flat::test_msgs::msg::Defaults defaults_values[100];

      @default (value="(False, True, False)")
      boolean bool_values_default[100];

      @default (value="(0, 1, 255)")
      octet byte_values_default[100];

      @default (value="(0, 1, 127)")
      uint8 char_values_default[100];

      @default (value="(1.125, 0.0, -1.125)")
      float float32_values_default[100];

      @default (value="(3.1415, 0.0, -3.1415)")
      double float64_values_default[100];

      @default (value="(0, 127, -128)")
      int8 int8_values_default[100];

      @default (value="(0, 1, 255)")
      uint8 uint8_values_default[100];

      @default (value="(0, 32767, -32768)")
      int16 int16_values_default[100];

      @default (value="(0, 1, 65535)")
      uint16 uint16_values_default[100];

      @default (value="(0, 2147483647, -2147483648)")
      int32 int32_values_default[100];

      @default (value="(0, 1, 4294967295)")
      uint32 uint32_values_default[100];

      @default (value="(0, 9223372036854775807, -9223372036854775808)")
      int64 int64_values_default[100];

      @default (value="(0, 1, 18446744073709551615)")
      uint64 uint64_values_default[100];

      @default (value="('', 'max value', 'min value')")
      char string_values_default[100][255 + 1];

      

      int32 alignment_check;
    };
  };
};
};
