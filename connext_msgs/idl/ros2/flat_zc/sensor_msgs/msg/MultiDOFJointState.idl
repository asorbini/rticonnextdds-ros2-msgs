// generated from rosidl_adapter/resource/msg.idl.em
// with input from sensor_msgs/msg/MultiDOFJointState.msg
// generated code does not contain a copyright notice

#ifndef geometry_msgs_msg_Transform_idl
#define geometry_msgs_msg_Transform_idl
#include "ros2/flat_zc/geometry_msgs/msg/Transform.idl"
#endif  // geometry_msgs_msg_Transform_idl
#ifndef geometry_msgs_msg_Twist_idl
#define geometry_msgs_msg_Twist_idl
#include "ros2/flat_zc/geometry_msgs/msg/Twist.idl"
#endif  // geometry_msgs_msg_Twist_idl
#ifndef geometry_msgs_msg_Wrench_idl
#define geometry_msgs_msg_Wrench_idl
#include "ros2/flat_zc/geometry_msgs/msg/Wrench.idl"
#endif  // geometry_msgs_msg_Wrench_idl
#ifndef std_msgs_msg_Header_idl
#define std_msgs_msg_Header_idl
#include "ros2/flat_zc/std_msgs/msg/Header.idl"
#endif  // std_msgs_msg_Header_idl

module ros2 { module flat_zc { module sensor_msgs {
  module msg {
    



















    @mutable
    @transfer_mode(SHMEM_REF)
    @language_binding(FLAT_DATA)
    struct MultiDOFJointState {
      ros2::flat_zc::std_msgs::msg::Header header;

      sequence<string<255>, 100> joint_names;

      sequence<ros2::flat_zc::geometry_msgs::msg::Transform, 100> transforms;

      sequence<ros2::flat_zc::geometry_msgs::msg::Twist, 100> twist;

      sequence<ros2::flat_zc::geometry_msgs::msg::Wrench, 100> wrench;
    };
  };
}; }; };
